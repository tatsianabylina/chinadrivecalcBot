const { Telegraf } = require('telegraf');
  if (state.step === 'waiting_weight') {
    const weight = parseFloat(text);

    if (isNaN(weight) || weight <= 0) {
      return ctx.reply('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–µ—Å (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1.5)');
    }

    userState[userId] = { step: 'waiting_price', weight };
    return ctx.reply('üí∞ –í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ –≤ —é–∞–Ω—è—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä: 400)');
  }

  // –®–∞–≥ 2: –í–≤–æ–¥ —Ü–µ–Ω—ã
  if (state.step === 'waiting_price') {
    const priceCNY = parseFloat(text);

    if (isNaN(priceCNY) || priceCNY < 0) {
      return ctx.reply('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É –≤ —é–∞–Ω—è—Ö.');
    }

    const { weight } = state;
    const deliveryCost = weight * COST_PER_KG;
    const itemCostBYN = priceCNY * CNY_TO_BYN;
    const total = deliveryCost + itemCostBYN;

    const resultText = `
üì¶ *–†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—Å—á—ë—Ç–∞:*

‚Ä¢ –í–µ—Å: *${weight} –∫–≥*
‚Ä¢ –î–æ—Å—Ç–∞–≤–∫–∞: *${deliveryCost.toFixed(2)} BYN* (–ø–æ ${COST_PER_KG} BYN/–∫–≥)
‚Ä¢ –¢–æ–≤–∞—Ä: *${priceCNY} CNY* ‚Üí *${itemCostBYN.toFixed(2)} BYN* (–ø–æ –∫—É—Ä—Å—É 1 CNY = ${CNY_TO_BYN} BYN)
‚Ä¢ –ò—Ç–æ–≥–æ –∫ –æ–ø–ª–∞—Ç–µ: *${total.toFixed(2)} BYN*

–†–∞—Å—á–µ—Ç –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω—ã–π, –µ—Å–ª–∏ —É –≤–∞—Å –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã - –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –°–í–Ø–ó–ê–¢–¨–°–Ø –° –ú–ï–ù–ï–î–ñ–ï–†–û–ú üöÄ
    `.trim();

    ctx.reply(resultText, { parse_mode: 'Markdown' });

    // –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è
    delete userState[userId];

    // –í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é
    setTimeout(() => {
      ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ:', menuButtons);
    }, 1000);
  }
});

// === –í–ï–ë-–°–ï–†–í–ï–† –î–õ–Ø RENDER ===
const app = express();
app.use(express.json());
app.use(bot.webhookCallback('/'));

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (–¥–ª—è UptimeRobot)
app.get('/', (req, res) => {
  res.send('‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! Webhook –∞–∫—Ç–∏–≤–µ–Ω.');
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});

// === –ó–ê–ü–£–°–ö –ë–û–¢–ê ===
bot.launch()
  .then(() => console.log('‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!'))
  .catch(err => console.error('üî¥ –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞:', err));
