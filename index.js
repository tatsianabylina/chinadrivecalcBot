const { Telegraf } = require('telegraf');
const express = require('express');

// === –¢–û–ö–ï–ù –ë–û–¢–ê (–∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è) ===
const BOT_TOKEN = process.env.BOT_TOKEN;
const bot = new Telegraf(BOT_TOKEN);

// === –ù–ê–°–¢–†–û–ô–ö–ò ===
const COST_PER_KG = 23;        // BYN –∑–∞ 1 –∫–≥
const CNY_TO_BYN = 0.62;       // 1 —é–∞–Ω—å = 0.62 BYN

// === /start ===
bot.start((ctx) => {
  ctx.reply(`
üëã –ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –±–æ—Ç-–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–æ—Å—Ç–∞–≤–∫–∏ –∏–∑ –ö–∏—Ç–∞—è.

–û—Ç–ø—Ä–∞–≤—å—Ç–µ:
\`–≤–µ—Å, —Å—É–º–º–∞ –≤ —é–∞–Ω—è—Ö\`

–ü—Ä–∏–º–µ—Ä:
\`2.5, 400\`
  `.trim(), { parse_mode: 'Markdown' });
});

// === –û–±—Ä–∞–±–æ—Ç–∫–∞: "2.5, 400" ===
bot.hears(/([\d.]+)\s*,\s*([\d.]+)/, (ctx) => {
  const text = ctx.message.text;
  const match = text.match(/([\d.]+)\s*,\s*([\d.]+)/);
  const weight = parseFloat(match[1]);
  const priceCNY = parseFloat(match[2]);

  if (isNaN(weight) || weight <= 0) {
    return ctx.reply('‚ùå –í–µ—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.');
  }
  if (isNaN(priceCNY) || priceCNY < 0) {
    return ctx.reply('‚ùå –°—É–º–º–∞ –≤ —é–∞–Ω—è—Ö –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º.');
  }

  const deliveryCost = weight * COST_PER_KG;
  const itemCostBYN = priceCNY * CNY_TO_BYN;
  const total = deliveryCost + itemCostBYN;

  ctx.reply(`
üì¶ *–†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—Å—á—ë—Ç–∞:*

‚Ä¢ –í–µ—Å: *${weight} –∫–≥*
‚Ä¢ –î–æ—Å—Ç–∞–≤–∫–∞: *${deliveryCost.toFixed(2)} BYN* (–ø–æ ${COST_PER_KG} BYN/–∫–≥)
‚Ä¢ –¢–æ–≤–∞—Ä: *${priceCNY} CNY* ‚Üí *${itemCostBYN.toFixed(2)} BYN* (–ø–æ –∫—É—Ä—Å—É 1 CNY = ${CNY_TO_BYN} BYN)
‚Ä¢ –ò—Ç–æ–≥–æ: *${total.toFixed(2)} BYN*

–°–ø–∞—Å–∏–±–æ! üöÄ
  `.trim(), { parse_mode: 'Markdown' });
});

// === –í–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è Render ===
const app = express();
app.use(express.json());
app.use(bot.webhookCallback('/'));

app.get('/', (req, res) => {
  res.send('‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞ Render.com');
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});

// === –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===
bot.launch();
console.log('‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
